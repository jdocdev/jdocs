"use strict";(self.webpackChunkjuandavid_dev=self.webpackChunkjuandavid_dev||[]).push([[7707],{3216:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>c,contentTitle:()=>t,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"aprendiento-larevel/POO/POO-constructores-PHP8","title":"Constructor Property Promotion en PHP (PHP 8.0+)","description":"PHP 8 introdujo una nueva caracter\xedstica que permite una forma m\xe1s compacta y eficiente de declarar y asignar propiedades dentro del constructor de una clase, llamada Constructor Property Promotion. Esta nueva sintaxis reduce el c\xf3digo repetitivo y mejora la legibilidad, facilitando la creaci\xf3n de clases con m\xfaltiples atributos.","source":"@site/docs/03-aprendiento-larevel/02-POO/08-POO-constructores-PHP8.md","sourceDirName":"03-aprendiento-larevel/02-POO","slug":"/aprendiento-larevel/POO/POO-constructores-PHP8","permalink":"/jdocs/docs/aprendiento-larevel/POO/POO-constructores-PHP8","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/03-aprendiento-larevel/02-POO/08-POO-constructores-PHP8.md","tags":[],"version":"current","sidebarPosition":8,"frontMatter":{"sidebar_position":8},"sidebar":"tutorialSidebar","previous":{"title":"Tipado de Datos en PHP","permalink":"/jdocs/docs/aprendiento-larevel/POO/POO-tipado-datos"}}');var a=n(4848),s=n(8453);const i={sidebar_position:8},t="Constructor Property Promotion en PHP (PHP 8.0+)",c={},d=[{value:"1. \xbfQu\xe9 es Constructor Property Promotion?",id:"1-qu\xe9-es-constructor-property-promotion",level:2},{value:"2. Ventajas de Constructor Property Promotion",id:"2-ventajas-de-constructor-property-promotion",level:2},{value:"3. Sintaxis y Uso",id:"3-sintaxis-y-uso",level:2},{value:"Modificadores de Acceso:",id:"modificadores-de-acceso",level:3},{value:"4. Limitaciones",id:"4-limitaciones",level:2},{value:"5. Compatibilidad con Tipado",id:"5-compatibilidad-con-tipado",level:2},{value:"6. Ejemplo Completo con Constructor Property Promotion",id:"6-ejemplo-completo-con-constructor-property-promotion",level:2},{value:"Notas:",id:"notas",level:3}];function l(e){const o={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(o.header,{children:(0,a.jsx)(o.h1,{id:"constructor-property-promotion-en-php-php-80",children:"Constructor Property Promotion en PHP (PHP 8.0+)"})}),"\n",(0,a.jsx)(o.p,{children:"PHP 8 introdujo una nueva caracter\xedstica que permite una forma m\xe1s compacta y eficiente de declarar y asignar propiedades dentro del constructor de una clase, llamada Constructor Property Promotion. Esta nueva sintaxis reduce el c\xf3digo repetitivo y mejora la legibilidad, facilitando la creaci\xf3n de clases con m\xfaltiples atributos."}),"\n",(0,a.jsx)(o.hr,{}),"\n",(0,a.jsx)(o.h2,{id:"1-qu\xe9-es-constructor-property-promotion",children:"1. \xbfQu\xe9 es Constructor Property Promotion?"}),"\n",(0,a.jsx)(o.p,{children:"Es una sintaxis que permite declarar propiedades de una clase directamente en el constructor y asignarles valores de forma autom\xe1tica. En lugar de declarar las propiedades por separado y luego asignarlas dentro del constructor, se hace todo en una sola l\xednea."}),"\n",(0,a.jsx)(o.p,{children:"Ejemplo:"}),"\n",(0,a.jsx)(o.pre,{children:(0,a.jsx)(o.code,{className:"language-php",children:'<?php\nclass Producto {\n    // Constructor Property Promotion\n    public function __construct(\n        public string $nombre,\n        public float $precio\n    ) {}\n}\n\n$producto = new Producto("Laptop", 1500.00);\necho $producto->nombre;  // "Laptop"\n'})}),"\n",(0,a.jsx)(o.p,{children:"Este ejemplo es equivalente a la forma tradicional de declarar y asignar las propiedades, pero es mucho m\xe1s compacto."}),"\n",(0,a.jsx)(o.h2,{id:"2-ventajas-de-constructor-property-promotion",children:"2. Ventajas de Constructor Property Promotion"}),"\n",(0,a.jsxs)(o.ol,{children:["\n",(0,a.jsxs)(o.li,{children:["\n",(0,a.jsxs)(o.p,{children:[(0,a.jsx)(o.strong,{children:"C\xf3digo M\xe1s Compacto"}),": Reduce la cantidad de l\xedneas necesarias para declarar y asignar valores a las propiedades."]}),"\n"]}),"\n",(0,a.jsxs)(o.li,{children:["\n",(0,a.jsxs)(o.p,{children:[(0,a.jsx)(o.strong,{children:"Mayor Legibilidad"}),": El c\xf3digo se vuelve m\xe1s claro y f\xe1cil de entender, ya que la definici\xf3n de las propiedades y su asignaci\xf3n se hacen en un solo paso."]}),"\n"]}),"\n",(0,a.jsxs)(o.li,{children:["\n",(0,a.jsxs)(o.p,{children:[(0,a.jsx)(o.strong,{children:"Menos Propenso a Errores"}),": Evita la duplicaci\xf3n de c\xf3digo, lo que reduce la posibilidad de errores en la asignaci\xf3n de valores."]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(o.h2,{id:"3-sintaxis-y-uso",children:"3. Sintaxis y Uso"}),"\n",(0,a.jsx)(o.p,{children:"La sintaxis para usar Constructor Property Promotion es la siguiente:"}),"\n",(0,a.jsx)(o.pre,{children:(0,a.jsx)(o.code,{className:"language-php",children:"public function __construct(\n    public tipoDeDato $nombreAtributo,\n    ...\n) {}\n"})}),"\n",(0,a.jsx)(o.h3,{id:"modificadores-de-acceso",children:"Modificadores de Acceso:"}),"\n",(0,a.jsx)(o.p,{children:"Puedes usar modificadores de acceso como public, private, protected en las propiedades promovidas. Tambi\xe9n puedes definir tipos de datos como en las propiedades tradicionales."}),"\n",(0,a.jsx)(o.pre,{children:(0,a.jsx)(o.code,{className:"language-php",children:'<?php\nclass Usuario {\n    public function __construct(\n        private string $nombre,\n        protected int $edad,\n        public string $rol = "Usuario"\n    ) {}\n\n    public function getNombre(): string {\n        return $this->nombre; // Acceso permitido dentro de la clase\n    }\n}\n\n$usuario = new Usuario("Ana", 25, "Administrador");\necho $usuario->rol; // Acceso p\xfablico\n// echo $usuario->nombre; // Error: Propiedad privada\n'})}),"\n",(0,a.jsx)(o.h2,{id:"4-limitaciones",children:"4. Limitaciones"}),"\n",(0,a.jsxs)(o.ol,{children:["\n",(0,a.jsxs)(o.li,{children:["\n",(0,a.jsxs)(o.p,{children:[(0,a.jsx)(o.strong,{children:"No Se Permiten Valores Predeterminados Directamente en las Propiedades"}),": Aunque puedes asignar valores predeterminados a los par\xe1metros del constructor, no puedes asignar valores predeterminados directamente a las propiedades cuando las declaras."]}),"\n",(0,a.jsx)(o.pre,{children:(0,a.jsx)(o.code,{className:"language-php",children:'class Producto {\n    public function __construct(\n        public string $nombre = "Desconocido", // Asignaci\xf3n de valor predeterminado aqu\xed\n        public float $precio = 0.0\n    ) {}\n}\n'})}),"\n"]}),"\n",(0,a.jsxs)(o.li,{children:["\n",(0,a.jsxs)(o.p,{children:[(0,a.jsx)(o.strong,{children:"No Puede Ser Usado para L\xf3gica Compleja"}),": Si necesitas l\xf3gica adicional para inicializar los atributos, como validaciones o transformaciones, deber\xe1s hacerlo dentro del constructor tradicional."]}),"\n"]}),"\n"]}),"\n",(0,a.jsx)(o.h2,{id:"5-compatibilidad-con-tipado",children:"5. Compatibilidad con Tipado"}),"\n",(0,a.jsx)(o.p,{children:"Puedes combinar Constructor Property Promotion con el tipado estricto de PHP para garantizar que las propiedades sean del tipo adecuado."}),"\n",(0,a.jsx)(o.p,{children:"Ejemplo con Tipado:"}),"\n",(0,a.jsx)(o.pre,{children:(0,a.jsx)(o.code,{className:"language-php",children:'<?php\nclass Producto {\n    public function __construct(\n        public string $nombre,\n        public float $precio\n    ) {}\n}\n\n$producto = new Producto("Laptop", 1500.00);\necho $producto->precio;  // 1500.00\n'})}),"\n",(0,a.jsx)(o.h2,{id:"6-ejemplo-completo-con-constructor-property-promotion",children:"6. Ejemplo Completo con Constructor Property Promotion"}),"\n",(0,a.jsx)(o.pre,{children:(0,a.jsx)(o.code,{className:"language-php",children:'<?php\nclass Empleado {\n    public function __construct(\n        public string $nombre,\n        private float $salario,\n        protected string $puesto = "Empleado"\n    ) {}\n\n    public function mostrarInformacion(): string {\n        return "Nombre: $this->nombre, Puesto: $this->puesto, Salario: $this->salario";\n    }\n}\n\n$empleado = new Empleado("Laura", 3500.50, "Gerente");\necho $empleado->mostrarInformacion();\n'})}),"\n",(0,a.jsx)(o.p,{children:"Resultado:"}),"\n",(0,a.jsx)(o.pre,{children:(0,a.jsx)(o.code,{children:"Nombre: Laura, Puesto: Gerente, Salario: 3500.5\n"})}),"\n",(0,a.jsx)(o.h3,{id:"notas",children:"Notas:"}),"\n",(0,a.jsxs)(o.ul,{children:["\n",(0,a.jsx)(o.li,{children:"Constructor Property Promotion es una caracter\xedstica poderosa que simplifica la creaci\xf3n de objetos en PHP, especialmente \xfatil cuando las clases tienen muchos atributos."}),"\n",(0,a.jsx)(o.li,{children:"Aunque es m\xe1s conciso, no reemplaza el uso de constructores tradicionales cuando se requiere l\xf3gica adicional o valores predeterminados m\xe1s complejos."}),"\n",(0,a.jsx)(o.li,{children:"Es compatible con los modificadores de acceso y el tipado, lo que la hace muy robusta."}),"\n"]}),"\n",(0,a.jsx)(o.hr,{}),"\n",(0,a.jsxs)(o.p,{children:[(0,a.jsx)(o.strong,{children:"Documentado por:"})," ",(0,a.jsx)(o.a,{href:"https://www.youtube.com/@juandavid_dev",children:"JuanDavid_Dev"}),(0,a.jsx)(o.br,{}),"\n",(0,a.jsx)(o.strong,{children:"Rol:"})," Administrador",(0,a.jsx)(o.br,{}),"\n",(0,a.jsx)(o.strong,{children:"Fecha:"})," 04/12/2024",(0,a.jsx)(o.br,{}),"\n",(0,a.jsx)(o.strong,{children:"\xdaltima actualizaci\xf3n:"})," 04/12/2024"]}),"\n",(0,a.jsx)(o.hr,{})]})}function p(e={}){const{wrapper:o}={...(0,s.R)(),...e.components};return o?(0,a.jsx)(o,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}},8453:(e,o,n)=>{n.d(o,{R:()=>i,x:()=>t});var r=n(6540);const a={},s=r.createContext(a);function i(e){const o=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function t(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:i(e.components),r.createElement(s.Provider,{value:o},e.children)}}}]);