"use strict";(self.webpackChunkjuandavid_dev=self.webpackChunkjuandavid_dev||[]).push([[5805],{5999:(e,n,a)=>{a.r(n),a.d(n,{assets:()=>l,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>t});const r=JSON.parse('{"id":"aprendiento-larevel/POO/POO-introduccion","title":"Introducci\xf3n a la Programaci\xf3n Orientada a Objetos en PHP","description":"La Programaci\xf3n Orientada a Objetos (POO) es un paradigma de programaci\xf3n que organiza el c\xf3digo en torno a clases y objetos, en lugar de depender principalmente de funciones o procedimientos. Este enfoque promueve un desarrollo m\xe1s ordenado, estructurado y reutilizable.","source":"@site/docs/03-aprendiento-larevel/02-POO/02-POO-introduccion.md","sourceDirName":"03-aprendiento-larevel/02-POO","slug":"/aprendiento-larevel/POO/POO-introduccion","permalink":"/jdocs/docs/aprendiento-larevel/POO/POO-introduccion","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/03-aprendiento-larevel/02-POO/02-POO-introduccion.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","previous":{"title":"Configurar Entorno PHP con Docker (opcional)","permalink":"/jdocs/docs/aprendiento-larevel/POO/PHP-POO-Docker"},"next":{"title":"Clases en PHP: Definici\xf3n y Reglas","permalink":"/jdocs/docs/aprendiento-larevel/POO/POO-clases"}}');var s=a(4848),o=a(8453);const i={sidebar_position:2},c="Introducci\xf3n a la Programaci\xf3n Orientada a Objetos en PHP",l={},t=[{value:"\xbfQu\xe9 son las Clases y los Objetos?",id:"qu\xe9-son-las-clases-y-los-objetos",level:2},{value:"Ventajas de la POO",id:"ventajas-de-la-poo",level:2},{value:"Principios Fundamentales de la POO",id:"principios-fundamentales-de-la-poo",level:2}];function d(e){const n={a:"a",br:"br",code:"code",h1:"h1",h2:"h2",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"introducci\xf3n-a-la-programaci\xf3n-orientada-a-objetos-en-php",children:"Introducci\xf3n a la Programaci\xf3n Orientada a Objetos en PHP"})}),"\n",(0,s.jsx)(n.p,{children:"La Programaci\xf3n Orientada a Objetos (POO) es un paradigma de programaci\xf3n que organiza el c\xf3digo en torno a clases y objetos, en lugar de depender principalmente de funciones o procedimientos. Este enfoque promueve un desarrollo m\xe1s ordenado, estructurado y reutilizable."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.h2,{id:"qu\xe9-son-las-clases-y-los-objetos",children:"\xbfQu\xe9 son las Clases y los Objetos?"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Clase"}),": Es como un plano o plantilla que define la estructura y el comportamiento de un conjunto de datos. Describe las propiedades (atributos) y las acciones (m\xe9todos) que tendr\xe1n los objetos basados en esa clase."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Objeto"}),": Es una instancia de una clase. Los objetos son los datos que realmente usamos en el programa y que siguen el dise\xf1o de la clase de la que provienen."]}),"\n",(0,s.jsx)(n.p,{children:"Ejemplo b\xe1sico:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:'<?php\n// Definici\xf3n de una clase\nclass Persona {\n    public $nombre; // Atributo\n\n    // M\xe9todo\n    public function saludar() {\n        return "Hola, mi nombre es " . $this->nombre;\n    }\n}\n\n// Creaci\xf3n de un objeto\n$persona1 = new Persona();\n$persona1->nombre = "Juan";\necho $persona1->saludar(); // Salida: Hola, mi nombre es Juan\n?>\n'})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"ventajas-de-la-poo",children:"Ventajas de la POO"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Orden y estructura"}),":\nEl c\xf3digo est\xe1 organizado en clases, lo que facilita encontrar y modificar funcionalidades espec\xedficas."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Separaci\xf3n l\xf3gica del c\xf3digo"}),":\nEn lugar de crear funciones dispersas en varios archivos, puedes agruparlas dentro de clases relacionadas."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Reutilizaci\xf3n de c\xf3digo"}),":\nA trav\xe9s de la herencia, puedes extender clases existentes para evitar duplicar c\xf3digo."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Facilidad de mantenimiento"}),":\nEs m\xe1s sencillo localizar y corregir errores, o agregar nuevas funcionalidades sin afectar otras partes del sistema."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"principios-fundamentales-de-la-poo",children:"Principios Fundamentales de la POO"}),"\n",(0,s.jsx)(n.p,{children:"La POO se basa en cuatro principios esenciales que permiten desarrollar sistemas robustos y flexibles:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Abstracci\xf3n"}),':\nConsiste en enfocarse solo en los detalles relevantes de un objeto y ocultar los irrelevantes. Por ejemplo, una clase "Veh\xedculo" abstrae detalles comunes como ruedas y motor, pero ignora diferencias entre autos y bicicletas.']}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Encapsulamiento"}),":\nLimita el acceso directo a los atributos de un objeto, proporcionando m\xe9todos para manipularlos. Esto protege los datos y asegura que solo sean modificados de manera controlada."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"<?php\nclass Producto {\n    private $precio;\n\n    public function setPrecio($precio) {\n        if ($precio > 0) {\n            $this->precio = $precio;\n        }\n    }\n\n    public function getPrecio() {\n        return $this->precio;\n    }\n}\n\n$producto = new Producto();\n$producto->setPrecio(50);\necho $producto->getPrecio(); // Salida: 50\n?>\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Herencia"}),":\nPermite que una clase (clase hija) herede propiedades y m\xe9todos de otra clase (clase padre), facilitando la reutilizaci\xf3n de c\xf3digo."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:'<?php\nclass Animal {\n    public function hacerSonido() {\n        return "Sonido gen\xe9rico";\n    }\n}\n\nclass Perro extends Animal {\n    public function hacerSonido() {\n        return "Ladra";\n    }\n}\n\n$perro = new Perro();\necho $perro->hacerSonido(); // Salida: Ladra\n?>\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Polimorfismo"}),":\nPermite que diferentes clases hijas utilicen un mismo m\xe9todo de manera distinta, adapt\xe1ndolo a su contexto. Esto hace que el c\xf3digo sea m\xe1s flexible y din\xe1mico."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-php",children:"<?php\nclass Figura {\n    public function calcularArea() {\n        return 0;\n    }\n}\n\nclass Circulo extends Figura {\n    private $radio;\n\n    public function __construct($radio) {\n        $this->radio = $radio;\n    }\n\n    public function calcularArea() {\n        return pi() * pow($this->radio, 2);\n    }\n}\n\n$circulo = new Circulo(5);\necho $circulo->calcularArea(); // Salida: 78.539816339744\n?>\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"La Programaci\xf3n Orientada a Objetos en PHP te ayuda a estructurar el c\xf3digo de manera que sea ordenado, escalable y reutilizable. Aprender y aplicar conceptos como abstracci\xf3n, encapsulamiento, herencia y polimorfismo te permitir\xe1 escribir c\xf3digo m\xe1s limpio y f\xe1cil de mantener."}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.strong,{children:"Documentado por:"})," ",(0,s.jsx)(n.a,{href:"https://www.youtube.com/@juandavid_dev",children:"JuanDavid_Dev"}),(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Rol:"})," Administrador",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"Fecha:"})," 29/11/2024",(0,s.jsx)(n.br,{}),"\n",(0,s.jsx)(n.strong,{children:"\xdaltima actualizaci\xf3n:"})," 29/11/2024"]}),"\n",(0,s.jsx)(n.hr,{})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},8453:(e,n,a)=>{a.d(n,{R:()=>i,x:()=>c});var r=a(6540);const s={},o=r.createContext(s);function i(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);