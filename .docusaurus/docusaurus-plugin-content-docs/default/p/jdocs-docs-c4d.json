{"version":{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"noIndex":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Introducción","href":"/jdocs/docs/introduccion","docId":"introduccion","unlisted":false},{"type":"category","label":"Fundamentos de programación","collapsible":true,"collapsed":true,"items":[{"type":"category","label":"Introducción","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Introducción a la programación","href":"/jdocs/docs/fundamentos-de-programacion/introduccion/","docId":"fundamentos-de-programacion/introduccion/introduccion","unlisted":false},{"type":"link","label":"Programas y algoritmos","href":"/jdocs/docs/fundamentos-de-programacion/introduccion/programas-algoritmos","docId":"fundamentos-de-programacion/introduccion/programas-algoritmos","unlisted":false}],"href":"/jdocs/docs/category/introducción"}],"href":"/jdocs/docs/category/fundamentos-de-programación"},{"type":"category","label":"Laravel 11","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Entorno de Desarrollo con Docker","href":"/jdocs/docs/aprendiento-larevel/puesta-en-marcha","docId":"aprendiento-larevel/puesta-en-marcha","unlisted":false},{"type":"category","label":"POO PHP","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Configurar Entorno PHP con Docker (opcional)","href":"/jdocs/docs/aprendiento-larevel/POO/PHP-POO-Docker","docId":"aprendiento-larevel/POO/PHP-POO-Docker","unlisted":false},{"type":"link","label":"Introducción a la Programación Orientada a Objetos en PHP","href":"/jdocs/docs/aprendiento-larevel/POO/POO-introduccion","docId":"aprendiento-larevel/POO/POO-introduccion","unlisted":false},{"type":"link","label":"Clases en PHP: Definición y Reglas","href":"/jdocs/docs/aprendiento-larevel/POO/POO-clases","docId":"aprendiento-larevel/POO/POO-clases","unlisted":false},{"type":"link","label":"Instancias y Objetos en PHP","href":"/jdocs/docs/aprendiento-larevel/POO/POO-instancias-objetos","docId":"aprendiento-larevel/POO/POO-instancias-objetos","unlisted":false},{"type":"link","label":"Atributos y Funciones en PHP: Abstracción en Clases","href":"/jdocs/docs/aprendiento-larevel/POO/POO-abstraccion","docId":"aprendiento-larevel/POO/POO-abstraccion","unlisted":false},{"type":"link","label":"Constructores en PHP","href":"/jdocs/docs/aprendiento-larevel/POO/POO-constructores","docId":"aprendiento-larevel/POO/POO-constructores","unlisted":false},{"type":"link","label":"Tipado de Datos en PHP","href":"/jdocs/docs/aprendiento-larevel/POO/POO-tipado-datos","docId":"aprendiento-larevel/POO/POO-tipado-datos","unlisted":false},{"type":"link","label":"Constructor Property Promotion en PHP (PHP 8.0+)","href":"/jdocs/docs/aprendiento-larevel/POO/POO-constructores-PHP8","docId":"aprendiento-larevel/POO/POO-constructores-PHP8","unlisted":false},{"type":"link","label":"Métodos en PHP","href":"/jdocs/docs/aprendiento-larevel/POO/POO-metodos-PHP","docId":"aprendiento-larevel/POO/POO-metodos-PHP","unlisted":false},{"type":"link","label":"Modificadores de Acceso en PHP","href":"/jdocs/docs/aprendiento-larevel/POO/POO-modificiadores-acceso","docId":"aprendiento-larevel/POO/POO-modificiadores-acceso","unlisted":false},{"type":"link","label":"Getters y Setters en PHP","href":"/jdocs/docs/aprendiento-larevel/POO/POO-getters-setters","docId":"aprendiento-larevel/POO/POO-getters-setters","unlisted":false},{"type":"link","label":"Herencia en PHP","href":"/jdocs/docs/aprendiento-larevel/POO/POO-herencia","docId":"aprendiento-larevel/POO/POO-herencia","unlisted":false},{"type":"link","label":"Clases Abstractas en PHP","href":"/jdocs/docs/aprendiento-larevel/POO/POO-clases-abstractas","docId":"aprendiento-larevel/POO/POO-clases-abstractas","unlisted":false},{"type":"link","label":"Métodos Estáticos en PHP","href":"/jdocs/docs/aprendiento-larevel/POO/POO-metodos-estaticos","docId":"aprendiento-larevel/POO/POO-metodos-estaticos","unlisted":false},{"type":"link","label":"Comunicación entre Clases en PHP","href":"/jdocs/docs/aprendiento-larevel/POO/POO-comunicar-clases","docId":"aprendiento-larevel/POO/POO-comunicar-clases","unlisted":false}],"href":"/jdocs/docs/category/poo-php"}],"href":"/jdocs/docs/category/laravel-11"}]},"docs":{"aprendiento-larevel/POO/PHP-POO-Docker":{"id":"aprendiento-larevel/POO/PHP-POO-Docker","title":"Configurar Entorno PHP con Docker (opcional)","description":"Esta guía te ayudará a configurar un entorno de desarrollo básico para PHP utilizando Docker Compose.","sidebar":"tutorialSidebar"},"aprendiento-larevel/POO/POO-abstraccion":{"id":"aprendiento-larevel/POO/POO-abstraccion","title":"Atributos y Funciones en PHP: Abstracción en Clases","description":"Los atributos (propiedades) y funciones (métodos) de una clase en PHP son los componentes fundamentales que permiten representar entidades del mundo real. Juntos forman parte del principio de abstracción, uno de los pilares de la programación orientada a objetos (POO).","sidebar":"tutorialSidebar"},"aprendiento-larevel/POO/POO-clases":{"id":"aprendiento-larevel/POO/POO-clases","title":"Clases en PHP: Definición y Reglas","description":"En esta guía aprenderás cómo definir clases en PHP, sus reglas principales y buenas prácticas asociadas.","sidebar":"tutorialSidebar"},"aprendiento-larevel/POO/POO-clases-abstractas":{"id":"aprendiento-larevel/POO/POO-clases-abstractas","title":"Clases Abstractas en PHP","description":"Una clase abstracta en PHP es una clase que no puede ser instanciada directamente y está diseñada para ser extendida por otras clases. Estas clases suelen actuar como plantillas que definen una estructura base y pueden incluir métodos abstractos (sin implementación) que las clases hijas están obligadas a implementar.","sidebar":"tutorialSidebar"},"aprendiento-larevel/POO/POO-comunicar-clases":{"id":"aprendiento-larevel/POO/POO-comunicar-clases","title":"Comunicación entre Clases en PHP","description":"La comunicación entre clases es un aspecto fundamental en la programación orientada a objetos. Permite que diferentes clases interactúen entre sí, ya sea en el mismo archivo o en archivos separados, facilitando la modularidad y reutilización del código.","sidebar":"tutorialSidebar"},"aprendiento-larevel/POO/POO-constructores":{"id":"aprendiento-larevel/POO/POO-constructores","title":"Constructores en PHP","description":"Los constructores son métodos especiales que se utilizan para inicializar objetos al momento de ser creados. Facilitan la asignación de valores iniciales a los atributos de una clase, simplificando la creación y configuración de objetos.","sidebar":"tutorialSidebar"},"aprendiento-larevel/POO/POO-constructores-PHP8":{"id":"aprendiento-larevel/POO/POO-constructores-PHP8","title":"Constructor Property Promotion en PHP (PHP 8.0+)","description":"PHP 8 introdujo una nueva característica que permite una forma más compacta y eficiente de declarar y asignar propiedades dentro del constructor de una clase, llamada Constructor Property Promotion. Esta nueva sintaxis reduce el código repetitivo y mejora la legibilidad, facilitando la creación de clases con múltiples atributos.","sidebar":"tutorialSidebar"},"aprendiento-larevel/POO/POO-getters-setters":{"id":"aprendiento-larevel/POO/POO-getters-setters","title":"Getters y Setters en PHP","description":"Los getters y setters son métodos utilizados para acceder y modificar los atributos de una clase respetando los principios de encapsulación en Programación Orientada a Objetos (POO). Estos métodos ofrecen una forma controlada y segura de interactuar con los atributos de un objeto, permitiendo aplicar validaciones, cálculos o transformaciones antes de acceder o modificar sus valores.","sidebar":"tutorialSidebar"},"aprendiento-larevel/POO/POO-herencia":{"id":"aprendiento-larevel/POO/POO-herencia","title":"Herencia en PHP","description":"La herencia es un principio fundamental de la Programación Orientada a Objetos (POO) que permite a una clase (llamada clase hija o subclase) heredar atributos y métodos de otra clase (llamada clase padre o superclase). Esto fomenta la reutilización de código y evita la duplicación de lógica al compartir funcionalidad común entre clases relacionadas.","sidebar":"tutorialSidebar"},"aprendiento-larevel/POO/POO-instancias-objetos":{"id":"aprendiento-larevel/POO/POO-instancias-objetos","title":"Instancias y Objetos en PHP","description":"En esta sección, aprenderás sobre cómo funcionan las instancias y los objetos en PHP, y cómo puedes trabajar con ellos en la programación orientada a objetos (POO).","sidebar":"tutorialSidebar"},"aprendiento-larevel/POO/POO-introduccion":{"id":"aprendiento-larevel/POO/POO-introduccion","title":"Introducción a la Programación Orientada a Objetos en PHP","description":"La Programación Orientada a Objetos (POO) es un paradigma de programación que organiza el código en torno a clases y objetos, en lugar de depender principalmente de funciones o procedimientos. Este enfoque promueve un desarrollo más ordenado, estructurado y reutilizable.","sidebar":"tutorialSidebar"},"aprendiento-larevel/POO/POO-metodos-estaticos":{"id":"aprendiento-larevel/POO/POO-metodos-estaticos","title":"Métodos Estáticos en PHP","description":"Los métodos estáticos son funciones especiales dentro de una clase que pueden ser llamadas sin necesidad de crear una instancia de la misma. Estas funciones pertenecen a la clase en sí y no a objetos específicos.","sidebar":"tutorialSidebar"},"aprendiento-larevel/POO/POO-metodos-PHP":{"id":"aprendiento-larevel/POO/POO-metodos-PHP","title":"Métodos en PHP","description":"Los métodos son funciones que pertenecen a una clase. Cuando una función se declara dentro de una clase, automáticamente pasa a ser conocida como un método. Los métodos son fundamentales para la Programación Orientada a Objetos (POO), ya que permiten encapsular la lógica dentro de las clases y operar sobre los atributos de la misma. Este concepto está estrechamente relacionado con el principio de abstracción.","sidebar":"tutorialSidebar"},"aprendiento-larevel/POO/POO-modificiadores-acceso":{"id":"aprendiento-larevel/POO/POO-modificiadores-acceso","title":"Modificadores de Acceso en PHP","description":"Los modificadores de acceso controlan la visibilidad y el alcance de los atributos y métodos dentro de una clase. En PHP, se utilizan tres modificadores principales: public, protected y private.","sidebar":"tutorialSidebar"},"aprendiento-larevel/POO/POO-tipado-datos":{"id":"aprendiento-larevel/POO/POO-tipado-datos","title":"Tipado de Datos en PHP","description":"El tipado en PHP permite especificar el tipo de datos que se espera en variables, atributos, parámetros y valores de retorno. Esto ayuda a garantizar la consistencia en la estructura y el comportamiento del código, minimizando errores y mejorando la legibilidad y mantenimiento del mismo.","sidebar":"tutorialSidebar"},"aprendiento-larevel/puesta-en-marcha":{"id":"aprendiento-larevel/puesta-en-marcha","title":"Entorno de Desarrollo con Docker","description":"Esta guía te ayudará a configurar un entorno de desarrollo para Laravel utilizando Docker.","sidebar":"tutorialSidebar"},"fundamentos-de-programacion/introduccion/introduccion":{"id":"fundamentos-de-programacion/introduccion/introduccion","title":"Introducción a la programación","description":"Un ordenador, es capaz de realizar únicamente tres tipos de operaciones:","sidebar":"tutorialSidebar"},"fundamentos-de-programacion/introduccion/programas-algoritmos":{"id":"fundamentos-de-programacion/introduccion/programas-algoritmos","title":"Programas y algoritmos","description":"En Construcción","sidebar":"tutorialSidebar"},"introduccion":{"id":"introduccion","title":"Introducción","description":"¡Descubre el emocionante mundo de la programación, paso a paso, desde los fundamentos hasta temas avanzados!","sidebar":"tutorialSidebar"}}}}